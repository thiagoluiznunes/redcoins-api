swagger: "2.0"
info:
  version: "1.0"
  title: Red Coins API
  contact:
    email: "thiagoluiz.dev@gmail.com"

basePath: /api/v1/

consumes:
- application/json
produces:
- application/json
schemes:
- http

securityDefinitions:
  bearerAuth:
    type: apiKey
    name: Authorization
    in: header

host: localhost:8000
paths:
  /users/login:
    post:
      tags:
        - user
      description: User Login
      parameters:
        - name: body
          in: body
          schema:
            $ref: "#/definitions/login-request"
      responses:
        200:
          description: Logged
          schema:
            $ref: "#/definitions/login-response"
        406:
          description: Invalid email/password
          schema:
            $ref: "#/definitions/error"
        400:
          description: Fail to generete token
          schema:
            $ref: "#/definitions/error"
  /users/signup:
    post:
      tags:
        - user
      description: User Signup
      parameters:
        - name: body
          in: body
          schema:
            $ref: "#/definitions/signup-request"
      responses:
        201:
          description: User registered with success.
        406:
          description: Invalid fields or user already registered.
          schema:
            $ref: "#/definitions/error"
  /operations:
    post:
      security:
        - bearerAuth: []
      tags:
        - operations
      description: Create Operation purchase/sale. Needs be authorized via Login.
      parameters:
        - name: body
          in: body
          enum: [purchase, sale]
          schema:
            $ref: "#/definitions/create-operation-request"
      responses:
        200:
          description: Operation successfully performed.
        401:
          description: Unauthorized Access.
          schema:
            $ref: "#/definitions/error"
        403:
          description: Restrict Access.
          schema:
            $ref: "#/definitions/error"
        406:
          description: Invalid operation_type/amount.
          schema:
            $ref: "#/definitions/error"
    get:
      security:
        - bearerAuth: []
      tags:
        - operations
      description: Get Operations by User. Needs be authorized via Login.
      responses:
        200:
          description: All operations.
        401:
          description: Unauthorized Access.
          schema:
            $ref: "#/definitions/error"
        403:
          description: Restrict Access.
          schema:
            $ref: "#/definitions/error"
  /operations/date/{date}:
    get:
      security:
        - bearerAuth: []
      tags:
        - operations
      description: Get Operations by Date. Needs be authorized via Admin Login.
      parameters:
        - in: path
          name: date
          schema:
            type: string
          required: true
          description: "Operations date. Example: 2019-11-30"

      responses:
        200:
          description: All operations.
        401:
          description: Unauthorized Access.
          schema:
            $ref: "#/definitions/error"
        403:
          description: Restrict Access.
          schema:
            $ref: "#/definitions/error"
        404:
          description: Operations not found.
          schema:
            $ref: "#/definitions/error"
  /operations/name/{name}:
    get:
      security:
        - bearerAuth: []
      tags:
        - operations
      description: Get Operations by Name. Needs be authorized via Admin Login.
      parameters:
        - in: path
          name: name
          schema:
            type: string
          required: true
          description: "Operations Name. Example: Admin User"

      responses:
        200:
          description: All operations.
        401:
          description: Unauthorized Access.
          schema:
            $ref: "#/definitions/error"
        403:
          description: Restrict Access.
          schema:
            $ref: "#/definitions/error"
        404:
          description: Operations not found.
          schema:
            $ref: "#/definitions/error"
  /operations/email:
    post:
      security:
        - bearerAuth: []
      tags:
        - operations
      description: Get Operations by Email. Needs be authorized via Admin Login.
      parameters:
        - name: body
          in: body
          schema:
            $ref: "#/definitions/post-operationsByEmail-request"
      responses:
        200:
          description: All operations.
        401:
          description: Unauthorized Access.
          schema:
            $ref: "#/definitions/error"
        403:
          description: Restrict Access.
          schema:
            $ref: "#/definitions/error"
        404:
          description: Operations not found.
          schema:
            $ref: "#/definitions/error"

definitions:
  login-request:
    type: object
    required:
      - email
      - password
    properties:
      email:
        type: string
      password:
        type: string
  login-response:
    type: object
    required:
      - code
      - jwt
    properties:
      code:
        type: integer
      jwt:
        type: string
  signup-request:
    type: object
    required:
      - name
      - email
      - password
      - confirm_password
    properties:
      name:
        type: string
      email:
        type: string
      password:
        type: string
      confirm_password:
        type: string
      secret:
        type: string
  create-operation-request:
    type: object
    required:
      - operation_type
      - amount
    properties:
      operation_type:
        type: string
        examples:
          purchase:
            value: purchase
          sale:
            value: sale
      amount:
        type: string
        example: "150"
  post-operationsByEmail-request:
    type: object
    required:
      - email
    properties:
      email:
        type: string
  error:
    type: object
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int64
      message:
        type: string
